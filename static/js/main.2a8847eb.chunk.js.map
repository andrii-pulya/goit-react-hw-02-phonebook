{"version":3,"sources":["components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactList.jsx","components/PageWrapper/PageWrapper.styled.jsx","App.js","index.js"],"names":["AddContactContainer","FormContainer","ItemFormLabel","ContactBtn","AddContactBtn","text","AddContactForm","state","name","number","submitContacts","e","preventDefault","props","onSubmit","setState","handlechange","target","value","this","type","pattern","title","placeholder","autoComplete","onChange","required","Component","ContactListContainer","ContactItemContainer","ContactItem","DeleteBtn","ItemName","ContactList","contacts","console","log","map","contact","id","PageWrapper","App","filter","addContact","prevState","nanoid","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEO,IAAMA,EAAmB,iMASnBC,EAAa,uGAKbC,EAAa,wGAKpBC,EAAU,kJAQT,SAASC,EAAT,GAAkC,IAATC,EAAQ,EAARA,KAC9B,OAAO,cAACF,EAAD,UAAaE,I,ICrBDC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,eAAiB,SAACC,GAChBA,EAAEC,iBACF,MAAyB,EAAKL,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKI,MAAMC,SAASN,EAAMC,GAC1B,EAAKM,SAAS,CAAEP,KAAM,GAAIC,OAAQ,M,EAGpCO,aAAe,SAACL,GACd,MAAwBA,EAAEM,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,EAAKH,SAAL,eACGP,EAAOU,K,4CAIZ,WACE,MAAyBC,KAAKZ,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,mCACE,eAACT,EAAD,WACE,2CACA,eAACC,EAAD,CAAea,SAAUK,KAAKT,eAA9B,UACE,eAACR,EAAD,kBAEE,uBACEkB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,YAAY,oBACZC,aAAa,MACbN,MAAOV,EACPiB,SAAUN,KAAKH,aACfU,UAAQ,OAGZ,eAACxB,EAAD,oBAEE,uBACEkB,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,YAAY,sBACZC,aAAa,MACbN,MAAOT,EACPgB,SAAUN,KAAKH,aACfU,UAAQ,OAGZ,cAACtB,EAAD,CAAegB,KAAK,SAASf,KAAM,4B,GAvDHsB,aCP/BC,EAAoB,2CCA1B,IAAMC,EAAoB,8EAGpBC,EAAW,2CAEXC,EAAS,wGAITC,EAAQ,yECFN,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAEpC,OADAC,QAAQC,IAAIF,GAEV,qCACE,0CACA,cAACN,EAAD,UACGM,EAASG,KAAI,SAACC,GAAD,OACZ,cAACR,EAAD,UACE,eAACD,EAAD,WACE,eAACG,EAAD,WACGM,EAAQ9B,KACR,KACA8B,EAAQ7B,UAEX,cAACsB,EAAD,yBAPcO,EAAQC,YCd7B,IAAMC,EAAW,sFCOHC,E,4MACnBlC,MAAQ,CACN2B,SAAU,CACR,CAAEK,GAAI,OAAQ/B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE8B,GAAI,OAAQ/B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE8B,GAAI,OAAQ/B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE8B,GAAI,OAAQ/B,KAAM,iBAAkBC,OAAQ,cAEhDiC,OAAQ,I,EAGVC,WAAa,SAACnC,EAAMC,GAClB,EAAKM,UAAS,SAAC6B,GAAD,MAAgB,CAC5BV,SAAS,CACP,CACEK,GAAIM,cACJrC,KAAMA,EACNC,OAAQA,IAJJ,mBAMHmC,EAAUV,gB,4CAKnB,WACE,IAAQA,EAAaf,KAAKZ,MAAlB2B,SACR,OACE,eAACM,EAAD,WACE,cAAC,EAAD,CAAgB1B,SAAUK,KAAKwB,aAEC,IAA/BxB,KAAKZ,MAAM2B,SAASY,OACnB,cAACb,EAAD,CAAaC,SAAUA,IAEvB,oE,GAjCuBP,aCJjCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a8847eb.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\r\n\r\nexport const AddContactContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  width: max-content;\r\n  align-items: center;\r\n`\r\nexport const FormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const ItemFormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ContactBtn = styled.button`\r\n  display: block;\r\n  padding: 5px;\r\n  margin: 10px 0px;\r\n  width: max-content;\r\n  coursor: pointer;\r\n`\r\n\r\nexport function AddContactBtn({ text }) {\r\n  return <ContactBtn>{text}</ContactBtn>\r\n}\r\n","import {\r\n  AddContactContainer,\r\n  AddContactBtn,\r\n  FormContainer,\r\n  ItemFormLabel,\r\n} from './AddContactForm.styled'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  submitContacts = (e) => {\r\n    e.preventDefault()\r\n    const { name, number } = this.state\r\n    this.props.onSubmit(name, number)\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n  handlechange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <>\r\n        <AddContactContainer>\r\n          <h1>Phonebook</h1>\r\n          <FormContainer onSubmit={this.submitContacts}>\r\n            <ItemFormLabel>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                placeholder=\"Put the name here\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n            </ItemFormLabel>\r\n            <ItemFormLabel>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                placeholder=\"Put the number here\"\r\n                autoComplete=\"off\"\r\n                value={number}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n            </ItemFormLabel>\r\n            <AddContactBtn type=\"submit\" text={'Add contact'} />\r\n          </FormContainer>\r\n        </AddContactContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n//export default function addContactForm() {\r\n//   const contactSubmit = () => {\r\n//     console.log('Keeeeder')\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <h1>Phonebook</h1>\r\n//       <AddContactContainer>\r\n//         <FieldName>Name</FieldName>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//           placeholder=\"Put name here\"\r\n//           autoComplete=\"off\"\r\n//           required\r\n//         />\r\n//         <FieldName>Number</FieldName>\r\n//         <input\r\n//           type=\"phone\"\r\n//           name=\"phone\"\r\n//           placeholder=\"Put number here\"\r\n//           autoComplete=\"off\"\r\n//           required\r\n//         />\r\n//         <AddContactBtn onClick={contactSubmit} text={'Add contact'} />\r\n//       </AddContactContainer>\r\n//     </>\r\n//   )\r\n// }\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactListContainer = styled.ul``\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const ContactItemContainer = styled.div`\r\n  display: flex;\r\n`\r\nexport const ContactItem = styled.li``\r\n\r\nexport const DeleteBtn = styled.button`\r\n  width: max-content;\r\n  padding: 3px 5px;\r\n`\r\nexport const ItemName = styled.p`\r\n  margin: 0;\r\n`\r\n","// import ContactItems from '../ContactItem/ContactItem'\r\nimport { ContactListContainer } from './ContactList.styled'\r\nimport {\r\n  ContactItemContainer,\r\n  ContactItem,\r\n  ItemName,\r\n  DeleteBtn,\r\n} from '../ContactItem/ContactItem.styled'\r\n\r\nexport default function ContactList({ contacts }) {\r\n  console.log(contacts)\r\n  return (\r\n    <>\r\n      <h1>Contacts</h1>\r\n      <ContactListContainer>\r\n        {contacts.map((contact) => (\r\n          <ContactItem key={contact.id}>\r\n            <ContactItemContainer>\r\n              <ItemName>\r\n                {contact.name}\r\n                {': '}\r\n                {contact.number}\r\n              </ItemName>\r\n              <DeleteBtn>Delete</DeleteBtn>\r\n            </ContactItemContainer>\r\n          </ContactItem>\r\n        ))}\r\n      </ContactListContainer>\r\n    </>\r\n  )\r\n}\r\n","import styled from '@emotion/styled/macro'\r\n\r\nexport const PageWrapper = styled.div`\r\n  content-align: center;\r\n`\r\n","import './App.css'\n\nimport React, { Component } from 'react'\nimport { nanoid } from 'nanoid'\n\nimport AddContactForm from './components/AddContactForm/AddContactForm.jsx'\nimport ContactList from './components/ContactList/ContactList.jsx'\nimport { PageWrapper } from './components/PageWrapper/PageWrapper.styled.jsx'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  addContact = (name, number) => {\n    this.setState((prevState) => ({\n      contacts: [\n        {\n          id: nanoid(),\n          name: name,\n          number: number,\n        },\n        ...prevState.contacts,\n      ],\n    }))\n  }\n\n  render() {\n    const { contacts } = this.state\n    return (\n      <PageWrapper>\n        <AddContactForm onSubmit={this.addContact} />\n\n        {this.state.contacts.length !== 0 ? (\n          <ContactList contacts={contacts} />\n        ) : (\n          <h1>You have not contacts saved</h1>\n        )}\n      </PageWrapper>\n    )\n  }\n}\n\n// Достаточно выделить четыре компонента: форма добавления контактов, список контактов, элемент списка контактов и фильтр поиска.\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}